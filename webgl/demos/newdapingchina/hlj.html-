<!DOCTYPE html>
<html lang="en">
    <head>
        <meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <title>ANTIY LABS</title>
        <link href="css/hlj.css" rel="stylesheet">
        <link href="css/china_table.css" rel="stylesheet">
        
        <script type="text/javascript" src="js/lib/jquery-1.7.2.min.js"></script>
        <script type="text/javascript" src="js/lib/raphael.js"></script>
        <script type="text/javascript" src="js/lib/highcharts.js"></script>
        
        <script type="text/javascript" src="js/lib/r50/three.min.js" charset="utf-8"></script>
        <script type="text/javascript" src="js/lib/Detector.js"></script>
        <script type="text/javascript" src="js/lib/Tween.js"></script>
        <script type="text/javascript" src="js/globe_v3_r50.js"></script>
        
        <script type="text/javascript" src="js/china_dark-green.js"></script>
        <script type="text/javascript" src="js/raphael_graph.js"></script>
        
        <script type="text/javascript" src="js/china_1200_960.js"></script>
        <script type="text/javascript" src="js/hlj_1200_960.js"></script>
        
        <script type="text/javascript" src="js/china_alarm_data.js"></script>
        <script type="text/javascript" src="js/hlj_alarm_data.js"></script>
        <script type="text/javascript" src="js/statis_data.js"></script>
        
        <script>
            /*
             * 雷达效果
             */
            function spinner(r ) {
                var sectorsCount = 24,
                    color = "#80f8eb",
                    width = 1,
                    r1 = 50,
                    r2 = 700,
                    cx = 600,
                    cy = 480,
                    sectors = [],
                    opacity = [],
                    opacity_1 = []
                    beta = 2 * Math.PI / sectorsCount,
                    pathParams = {
                        //stroke: "#888",
                        "stroke-width": 0.5,
                        //"stroke-linejoin": "round",
                        fill: color,
                        "fill-opacity": 0.0,
                        "stroke-opacity": 0.0
                    };
                    Raphael.getColor.reset();
                
                r.customAttributes.segment = function (x, y, r, a1, a2) {
                    var flag = (a2 - a1) > 180,
                        clr = (a2 - a1) / 360;
                    a1 = (a1 % 360) * Math.PI / 180;
                    a2 = (a2 % 360) * Math.PI / 180;
                    return {
                        path: [["M", x, y], ["l", r * Math.cos(a1), r * Math.sin(a1)], ["A", r, r, 0, +flag, 1, x + r * Math.cos(a2), y + r * Math.sin(a2)], ["z"]],
                        fill: color
                    };
                };
                
                circle_r = (r2 * 2 + width * 2)/2
                r.circle(cx, cy, 50).attr({stroke: "#88ffcc", "stroke-width": 1, "stroke-opacity": 0.8}).glow({color:"#80f8eb", width:8,opacity:0.25});
                r.circle(cx, cy, 200).attr({stroke: "#ffffff", "stroke-width": 1, "stroke-opacity": 0.5}).glow({color:"#80f8eb", width:8,opacity:0.5});
                r.circle(cx, cy, 300).attr({stroke: "#80f8eb", "stroke-width": 1, "stroke-opacity": 0.5}).glow({color:"#80f8eb", width:8,opacity:0.25});
                r.circle(cx, cy, 400).attr({stroke: "#ffffff", "stroke-width": 1, "stroke-opacity": 0.5}).glow({color:"#80f8eb", width:8,opacity:0.5});
                r.circle(cx, cy, 520).attr({stroke: "#80f8eb", "stroke-width": 1, "stroke-opacity": 0.5}).glow({color:"#80f8eb", width:8,opacity:0.25});
                r.circle(cx, cy, 620).attr({stroke: "#ffffff", "stroke-width": 1, "stroke-opacity": 0.8}).glow({color:"#80f8eb", width:8,opacity:0.5});
                
                var paths = [],
                    start = 0,
                    val = 360 / sectorsCount;
                
                for (var i = 0; i < sectorsCount; i++) {
                    var alpha = beta * i - Math.PI / 2,
                        cos = Math.cos(alpha),
                        sin = Math.sin(alpha);
                    if(i < 6){
                        opacity[i] = 4 / sectorsCount * i;
                    }
                    //else{
                    //    opacity[i] = 0;
                    //}
                    if(i%3 == 0){
                        sectors[i] = r.path([["M", cx + r1 * cos, cy + r1 * sin], ["L", cx + r2 * cos, cy + r2 * sin]]).attr({stroke: "#80f8eb", "stroke-width": 1, "stroke-opacity": 0.5}).glow({color:"#80f8eb", width:8,opacity:0.25});
                    }
                    else{
                        sectors[i] ='';
                    }
                    
                    
                    (function (i, val) {
                        var ttt = r.path().attr({segment: [cx, cy, 600, start, start + val], "fill-opacity": 1,"opacity": 0, stroke:color});
                        paths.push(ttt);
                    })(i, val);
                    start += val;
                }
                /*
                var data = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                    paths = [],
                    total,
                    start,
                data = data.sort(function (a, b) { return b - a;});
                
                total = 0;
                for (var i = 0, ii = data.length; i < ii; i++) {
                    total += data[i];
                }
                start = 0;
                for (i = 0; i < ii; i++) {
                    var val = 360 / total * data[i];
                    (function (i, val) {
                        var ttt = r.path().attr({segment: [cx, cy, 600, start, start + val], "fill-opacity": 0.5, stroke:color});
                        paths.push(ttt);
                    })(i, val);
                    start += val;
                }
                */
                var now_path_num = 0,
                    temp_num = 0;
                var tick;
                (function ticker() {
                    //paths[now_path_num - 1].attr("opacity", 0);
                    temp_num = now_path_num%sectorsCount
                    //console.info(temp_num);
                    paths[temp_num].attr("opacity", opacity[0]);
                    if(temp_num + 1 >= 24){
                        paths[temp_num + 1 - 24].attr("opacity", opacity[1]);
                    }
                    else{
                        paths[temp_num + 1].attr("opacity", opacity[1]);
                    }
                    if(temp_num + 2 >= 24){
                        paths[temp_num + 2 - 24].attr("opacity", opacity[2]);
                    }
                    else{
                        paths[temp_num + 2].attr("opacity", opacity[2]);
                    }
                    if(temp_num + 3 >= 24){
                        paths[temp_num + 3 - 24].attr("opacity", opacity[3]);
                    }
                    else{
                        paths[temp_num + 3].attr("opacity", opacity[3]);
                    }
                    if(temp_num + 4 >= 24){
                        paths[temp_num + 4 - 24].attr("opacity", opacity[4]);
                    }
                    else{
                        paths[temp_num + 4].attr("opacity", opacity[4]);
                    }
                    if(temp_num + 5 >= 24){
                        paths[temp_num + 5 - 24].attr("opacity", opacity[5]);
                    }
                    else{
                        paths[temp_num + 5].attr("opacity", opacity[5]);
                    }
                    now_path_num += 1;
                    /*
                    opacity.unshift(opacity.pop());
                    for (var i = 0; i < sectorsCount; i++) {
                        paths[i].attr("opacity", opacity[i]);
                    }
                    */
                    tick = setTimeout(ticker, 50);
                })();
                return function () {
                    clearTimeout(tick);
                    r.remove();
                };
            }
            
            function getHljAlarmData() {
                for (x in hlj_alarm_list) {
                    monitor_data = hlj_alarm_list[x];
                    
                    // 感染
                    if(monitor_data[0] == "0"){
                        lon = monitor_data[5];
                        lat = monitor_data[6];
                    }
                    // 源
                    else{
                        lon = monitor_data[3];
                        lat = monitor_data[4];
                    }
                    
                    monitor_location = getHljXY(parseFloat(lon), parseFloat(lat));
                    monitor_data.push(monitor_location['cx']);
                    monitor_data.push(monitor_location['cy']);
                    
                    hlj_alarm_data.push(monitor_data);
                }
            }
            
            function getHljXY(lon, lat) {
                // 黑龙江地图实际大小，1120*880
                //北53.33
                //南43.25
                //西121.11
                //东135.05
                return {
                    cx: ((lon-121.11)*(1120)/13.94) + 46,//左侧多46
                    cy: ((53.33-lat)*(880)/10.08) + 78//上侧多80
                };
            };
            
            
            // 捕获黑龙江数据列表   
            var hlj_alarm_data = [];
            getHljAlarmData();
            
            var world_width = 1900;
            var world_height = 960;
            var raphael, raphael_top, raphael_bottom, raphael3, raphael_hlj, raphael_radar;
            
            Raphael(10, 10, world_width, 40, function () {
                // 定义整体空间
                raphael_top = this;
                raphael_top.rect(0, 0, world_width, world_height, 0).attr({
                    //fill:"#11567D",
                    //"fill-opacity": 1,
                    stroke: "#888",
                    "stroke-width": 0.5,
                    "stroke-linejoin": "round",
                    //fill: "#80f8eb",
                    fill:"0-#408988-#80f8eb",
                    "fill-opacity": 0.2,
                    "stroke-opacity": 0.0
                });
                //raphael_top.text(950, 18, '  热 烈 欢 迎 市 领 导 莅 临 安 天 参 观 指 导').attr({fill: "#ff0000", "font-family":"微软雅黑", "font-size":36, "font-weight": "bold", "opacity": 0.8});
                //raphael_top.text(930, 18, '热 烈 欢 迎 市 领 导').attr({fill: "#ff0000", "font-family":"微软雅黑", "font-size":36, "font-weight": "bold", "opacity": 0.8, "text-anchor":"end"});
                //raphael_top.text(970, 18, '莅 临 安 天 参 观 指 导').attr({fill: "#ff0000", "font-family":"微软雅黑", "font-size":36, "font-weight": "bold", "opacity": 0.8, "text-anchor":"start"});
                raphael_top.text(900, 18, '拢 态 势 于 眼 底').attr({fill: "#ff0000", "font-family":"微软雅黑", "font-size":36, "font-weight": "bold", "opacity": 0.8, "text-anchor":"end"});
                raphael_top.text(1000, 18, '挫 威 胁 于 指 尖').attr({fill: "#ff0000", "font-family":"微软雅黑", "font-size":36, "font-weight": "bold", "opacity": 0.8, "text-anchor":"start"});
                //raphael_top.text(900, 18, '安 天 兄 弟 姐 妹 热 烈').attr({fill: "#ff0000", "font-family":"微软雅黑", "font-size":36, "font-weight": "bold", "opacity": 0.8, "text-anchor":"end"});
                //raphael_top.text(1000, 18, '欢 迎 蒋 旭 宪 老 师').attr({fill: "#ff0000", "font-family":"微软雅黑", "font-size":36, "font-weight": "bold", "opacity": 0.8, "text-anchor":"start"});
            });
            
            Raphael("china_raphael", 1440, 960, function () {
                // 定义整体空间
                raphael = this;
                raphael.rect(0, 0, 1440, 960, 0).attr({
                    stroke: "#11567D",
                    "stroke-width": 10,
                    "stroke-linejoin": "round",
                    fill: "#80f8eb",
                    //fill:"11567D",
                    "fill-opacity": 0.0,
                    "stroke-opacity": 0
                });
                
                raphael.rect(0, 0, 1440, 10, 0).attr({
                    //fill:"#11567D",
                    //"fill-opacity": 1,
                    stroke: "#888",
                    "stroke-width": 0.5,
                    "stroke-linejoin": "round",
                    //fill: "#80f8eb",
                    fill:"0-#408988-#80f8eb",
                    "fill-opacity": 0.2,
                    "stroke-opacity": 0.0
                });
                
                raphael.rect(0, 950, 1440, 10, 0).attr({
                    //fill:"#11567D",
                    //"fill-opacity": 1,
                    stroke: "#888",
                    "stroke-width": 0.5,
                    "stroke-linejoin": "round",
                    //fill: "#80f8eb",
                    fill:"0-#408988-#80f8eb",
                    "fill-opacity": 0.2,
                    "stroke-opacity": 0.0
                });
                
                
                //============================= 地图 ===========================
                
                /*
                 * 绘制地图
                 */
                raphael.setStart();
                for (var country in worldmap.shapes) {
                    raphael.path(worldmap.shapes[country]).attr({"stroke-linejoin": "round", stroke: "#80f8eb", fill: "#408988", "stroke-opacity": 1, "stroke-width": 1.0, "fill-opacity": 0.3}).data("name", worldmap.names[country]);
                }
                var world = raphael.setFinish();
                
                /*
                 * 底格横线
                 */ 
                
                for (var h = 0,i = 0; h <= 960; h += 40, i++ ) {
                    if(i%3==0 && i!=0 && i!= 24){
                        raphael.path("M0," + h + "L1440," + h).attr({stroke: "#4B8F88", "stroke-width": 1, "stroke-dasharray":"", "stroke-opacity": 0.8});
                    }
                    else{
                        if(i!=0 && i!= 24){
                            raphael.path("M0," + h + "L1440," + h).attr({stroke: "#4B8F88", "stroke-width": 1, "stroke-dasharray":"- ", "stroke-opacity": 0.6});
                        }
                        
                    }
                }
                
                
                /*
                 * 底格纵线
                 */
                
                for (var w = 0,i = 0; w <= 1440; w += 40, i++ ) {
                    if(i%3==0 && i !=0 && i!= 36){
                        raphael.path("M" + w + ",0L" + w + ",960").attr({stroke: "#4B8F88", "stroke-width": 1, "stroke-dasharray":"", "stroke-opacity": 0.8});
                    }
                    else{
                        if(i != 0&& i != 36){
                            raphael.path("M" + w + ",0L" + w + ",960").attr({stroke: "#4B8F88", "stroke-width": 1, "stroke-dasharray":"- ", "stroke-opacity": 0.6});
                        }
                        
                    }
                }
                
                
                /*
                 * 底格十字光晕
                 */
                
                var d_x = 0,
                    d_y = 0;
                for (var w = 120; w < 1440; w += 120) {
                    for (var h = 0; h < 960; h += 120) {
                        if(h !=0 ){
                            raphael.path("M" + w + "," + (h-5) + "L" + w + "," + (h+5)).attr({stroke: "#80f8eb", "stroke-width": 1, "stroke-opacity": 0.5}).glow({color:"#80f8eb", width:8,opacity:0.25});
                            raphael.path("M" + (w-5) + "," + h + "L" + (w+5) + "," + h).attr({stroke: "#80f8eb", "stroke-width": 1, "stroke-opacity": 0.5}).glow({color:"#80f8eb", width:8,opacity:0.25});
                        }
                    }
                }
                
                
                /*
                 * 背景竖杠
                 */
                var flash_cx = 0,
                    flash_item_width = 20;
                
                for (var i = 0; i < 72; i++) {
                    raphael.rect(flash_cx, 0, flash_item_width, 960, 0).attr({ fill: "#80f8eb", "fill-opacity": 0});
                    flash_cx += flash_item_width;
                }
                
                
                
                
                /*
                 * 左侧地图小模块
                 */
                var map_param = {
                    /*
                    //fill:"#11567D",
                    "fill-opacity": 0.3,
                    //stroke: "#888",
                    //"stroke-width": 0.5,
                    //"stroke-linejoin": "round",
                    fill: "#11567D",
                    //fill:"0-#408988-#80f8eb",
                    //"fill-opacity": 0.1,
                    //"stroke-opacity": 0.0
                    */
                    stroke: "#888",
                    "stroke-width": 0.5,
                    "stroke-linejoin": "round",
                    //fill: "#80f8eb",
                    fill:"#11567D",
                    "fill-opacity": 0.2,
                    "stroke-opacity": 0.0
                };
                raphael.rect(1320, 0, 120, 110, 0).attr(map_param);
                raphael.rect(1320, 120, 120, 110, 0).attr(map_param);
                raphael.rect(1320, 240, 120, 110, 0).attr(map_param);
                raphael.rect(1320, 360, 120, 110, 0).attr(map_param);
                raphael.rect(1320, 480, 120, 110, 0).attr(map_param);
                raphael.rect(1320, 600, 120, 110, 0).attr(map_param);
                
                loop_param = {stroke: "#fff", "stroke-width": 30};
                
                draw_loop(raphael, 1380, 60, 30, 42, "#ff0000", "#2FBFBF", 234);
                raphael.text(1380, 50, 'Trojan').attr({fill: "#ffffff", "font-size":11, "font-weight": "bold"});
                raphael.text(1380, 70, '65%').attr({fill: "#80f8eb", "font-size":10, "font-weight": "bold"});
                //raphael.circle(1380, 60, 48).attr({stroke: "#80f8eb", "stroke-width": 2, "stroke-opacity": 0.8});
                
                draw_loop(raphael, 1380, 180, 30, 42, "#ff0000", "#2FBFBF", 61);
                raphael.text(1380, 170, 'Virus').attr({fill: "#ffffff", "font-size":11, "font-weight": "bold"});
                raphael.text(1380, 190, '17%').attr({fill: "#80f8eb", "font-size":10, "font-weight": "bold"});
                //raphael.circle(1380, 180, 48).attr({stroke: "#80f8eb", "stroke-width": 2, "stroke-opacity": 0.8});
                
                draw_loop(raphael, 1380, 300, 30, 42, "#ff0000", "#2FBFBF", 32);
                raphael.text(1380, 290, 'Worm').attr({fill: "#ffffff", "font-size":11, "font-weight": "bold"});
                raphael.text(1380, 310, '9%').attr({fill: "#80f8eb", "font-size":10, "font-weight": "bold"});
                //raphael.circle(1380, 300, 48).attr({stroke: "#ffffff", "stroke-width": 2, "stroke-opacity": 0.8});
                
                draw_loop(raphael, 1380, 420, 30, 42, "#ff0000", "#2FBFBF", 14);
                raphael.text(1380, 410, 'Spyware').attr({fill: "#ffffff", "font-size":11, "font-weight": "bold"});
                raphael.text(1380, 430, '4%').attr({fill: "#80f8eb", "font-size":10, "font-weight": "bold"});
                
                draw_loop(raphael, 1380, 540, 30, 42, "#ff0000", "#2FBFBF", 4);
                raphael.text(1380, 530, 'Hacktool').attr({fill: "#ffffff", "font-size":11, "font-weight": "bold"});
                raphael.text(1380, 550, '1%').attr({fill: "#80f8eb", "font-size":10, "font-weight": "bold"});
                
                draw_loop(raphael, 1380, 660, 30, 42, "#ff0000", "#2FBFBF", 4);
                raphael.text(1380, 650, 'X-Files').attr({fill: "#ffffff", "font-size":11, "font-weight": "bold"});
                raphael.text(1380, 670, '1%').attr({fill: "#80f8eb", "font-size":10, "font-weight": "bold"});
                
                
                //============================= 地图 ===========================
                
                
                
                
                //=============================> 地图雷达 ===========================
                //spinner( raphael );
                //<============================= 地图雷达 ===========================
                
                
                //>============================= 地图雷达刷新告警 ===========================
                var now_flash_num = 0;
                setInterval(start_alarm_china, 1000);
                
                function start_alarm_china(){
                    //alarm_circle_3(raphael, china_alarm_list[now_flash_num]['cx'] + Math.floor(Math.random()*15), china_alarm_list[now_flash_num]['cy'] + Math.floor(Math.random()*15), 2, 5, 6, 8, 11);
                    //alarm_circle_3(raphael, china_alarm_list[now_flash_num + 1]['cx'] + Math.floor(Math.random()*15), china_alarm_list[now_flash_num +1 ]['cy'] + Math.floor(Math.random()*15), 2, 5, 6, 8, 11);
                    
                    for(var w = 0; w < Math.floor(Math.random()*10); w += 1){
                        //if( Math.floor(Math.random()*10) < 5){
                        //    alarm_src_symbol(raphael, china_alarm_list[now_flash_num][9], china_alarm_list[now_flash_num][10]);
                        //}
                        //else{
                            alarm_dst_symbol(raphael, china_alarm_list[now_flash_num][9], china_alarm_list[now_flash_num][10]);
                        //}
                        scroll_table(china_alarm_list[now_flash_num]);
                        now_flash_num += 1;
                        if(now_flash_num == china_alarm_list.length){
                           now_flash_num = 0
                        }
                    }
                }

                //为表格添加事件
                function scroll_table(china_alarm_list){
                    time = (new Date()).toLocaleTimeString();
                    
                    var virus_name = china_alarm_list['5'];
                    if(virus_name.length > 38){
                        virus_name = virus_name.substr(0, 35) + '...';
                    }
                    
                    _tbodydom = $('#scrolltalbe_china tbody');
                    _trdom = $('#scrolltalbe_china tbody tr');
                    
                    _trdom.eq(0).remove();
                    
                    _old = _tbodydom.html();
                    
                    _new = 
                        '<tr><td style="width: 45px"><div style="width: 5px">&nbsp;</div></td>'+
                            '<td style="width: 228px"><div style="width: 230px">' + virus_name + '</div></td>'+
                            '<td style="width: 135px"><div style="width: 110px">' + china_alarm_list['1'] + '</div></td></tr>';
                    _tbodydom.html(_old + _new);
                    
                };
                //<============================= 地图雷达刷新告警 ===========================
                
            });
            
            
            
            //============================= 右侧信息区 =================================
            Raphael(1450, 60, 460, world_height, function () {
                raphael3 = this;
                
                
                var info_param = {
                    stroke: "#888",
                    "stroke-width": 0.5,
                    "stroke-linejoin": "round",
                    //fill: "#80f8eb",
                    fill:"#2FBFBF",
                    //fill:"#11567D",
                    "fill-opacity": 0.15,
                    "stroke-opacity": 0.0
                };
                
                
                /*
                 * 右侧统计模块
                 */
                raphael3.rect(30, 5, 430, 220, 0).attr(info_param);
                draw_statistics_div(raphael3, china_statis);
                
                
                /*
                 * 套圈图
                 */
                raphael3.rect(30, 235, 215, 195, 0).attr(info_param);
                raphael3.circle(135, 330, 70).attr({stroke: "#ae442e", "stroke-width": 1, fill:"#ae442e","fill-opacity": 0.5, "stroke-opacity": 0.9});
                raphael3.text(135, 295, '本年').attr({fill: "#ffffff", "font-size":12, "font-weight": "bold"});
                raphael3.circle(135, 360, 40).attr({stroke: "#ae442e", "stroke-width": 1, fill:"#ae442e","fill-opacity": 0.7, "stroke-opacity": 0.9});
                raphael3.text(135, 340, '本月').attr({fill: "#ffffff", "font-size":11, "font-weight": "bold"});
                raphael3.circle(135, 380, 20).attr({stroke: "#b03317", "stroke-width": 1, fill:"#b03317","fill-opacity": 1, "stroke-opacity": 0.9});
                raphael3.text(135, 380, '本周').attr({fill: "#ffffff", "font-size":10, "font-weight": "bold"});
                
                raphael3.path("M150,295L180,295,L185,290").attr({stroke: "#ffffff", "stroke-width": 1, "stroke-dasharray":"- ", "stroke-opacity": 1});
                raphael3.rect(180, 270, 60, 20, 0).attr({fill:"#ae442e","fill-opacity": 0.5, "stroke-opacity": 0.0});
                raphael3.text(210, 280, '8,768,901').attr({fill: "#ffffff", "font-size":10, "font-weight": "bold", "text-anchor":"middle"});
                
                raphael3.path("M150,340L180,340,L185,335").attr({stroke: "#ffffff", "stroke-width": 1, "stroke-dasharray":"- ", "stroke-opacity": 1});
                raphael3.rect(180, 315, 60, 20, 0).attr({fill:"#ae442e","fill-opacity": 0.7, "stroke-opacity": 0.0});
                raphael3.text(210, 325, '95,616').attr({fill: "#ffffff", "font-size":10, "font-weight": "bold", "text-anchor":"middle"});
                
                raphael3.path("M150,380L180,380,L185,375").attr({stroke: "#ffffff", "stroke-width": 1, "stroke-dasharray":"- ", "stroke-opacity": 1});
                raphael3.rect(180, 355, 60, 20, 0).attr({fill:"#b03317","fill-opacity": 1, "stroke-opacity": 0.0});
                raphael3.text(210, 365, '50,855').attr({fill: "#ffffff", "font-size":10, "font-weight": "bold", "text-anchor":"middle"});
                
                
                /*
                 * 花瓣图
                 */
                //wind_rose("",1500,300, 10, 70, 24, 1, "#357B5A");
                raphael3.rect(255, 235, 205, 195, 0).attr(info_param);
                //var data_1 = [10, 12, 13, 24, 25, 36, 37, 48, 49, 50, 50, 62, 63, 74, 75, 86, 87, 98, 99, 20, 21, 22, 23, 24];
                var data_1 = [1350
                    ,903
                    ,751
                    ,771
                    ,495
                    ,371
                    ,373
                    ,372
                    ,568
                    ,767
                    ,1111
                    ,1387
                    ,1461
                    ,1318
                    ,1446
                    ,1360
                    ,1388
                    ,1417
                    ,1953
                    ,1861
                    ,2115
                    ,2267
                    ,1780
                    ,1475
                ];//2012年10月31日放马事件真实数据
                wind_rose("",1720,300, 10, 70, 24, 1, "#80f8eb", data_1);
                
                
                /*
                 * 排行
                 */
                raphael3.rect(30, 440, 430, 240, 0).attr(info_param);
                var box_param = {
                    stroke: "#ffffff",
                    "stroke-width": 1,
                    "stroke-linejoin": "round",
                    "fill-opacity": 0,
                }
                
                raphael3.text(260, 455, '恶意代码家族规模排行(Trojan)').attr({fill: "#ffffff", "font-size":14, "font-weight": "bold"});
                
                raphael3.text(230, 482, 'Trojan/Win32.Genome').attr({fill: "#ffffff", "font-size":10, "text-anchor":"end"});
                raphael3.text(230, 502, 'Trojan/Win32.Jorik').attr({fill: "#ffffff", "font-size":10, "text-anchor":"end"});
                raphael3.text(230, 522, 'Trojan/Win32.Hupigon[Backdoor]').attr({fill: "#ffffff", "font-size":10, "text-anchor":"end"});
                raphael3.text(230, 542, 'Trojan/Win32.FakeAV').attr({fill: "#ffffff", "font-size":10, "text-anchor":"end"});
                raphael3.text(230, 562, 'Trojan/Win32.VBKrypt').attr({fill: "#ffffff", "font-size":10, "text-anchor":"end"});
                raphael3.text(230, 582, 'Trojan/Win32.Agent').attr({fill: "#ffffff", "font-size":10, "text-anchor":"end"});
                raphael3.text(230, 602, 'Trojan/Win32.Injector[Dropper]').attr({fill: "#ffffff", "font-size":10, "text-anchor":"end"});
                raphael3.text(230, 622, 'Trojan/Win32.Zbot[Spy]').attr({fill: "#ffffff", "font-size":10, "text-anchor":"end"});
                raphael3.text(230, 642, 'Trojan/Win32.Agent[Downloader]').attr({fill: "#ffffff", "font-size":10, "text-anchor":"end"});
                raphael3.text(230, 662, 'Trojan/Win32.OnLineGames[GameThief]').attr({fill: "#ffffff", "font-size":10, "text-anchor":"end"});
                
                
                var column_param = {
                    stroke: "#ffffff",
                    fill:"#b03317",
                    "fill-opacity": 1,
                    "stroke-opacity": 0
                }
                
                //raphael.rect(1530, 450, 85, 8, 0).attr(column_param);
                raphael3.rect(240, 475, 180, 6, 0).attr(column_param);
                raphael3.rect(240, 495, 65, 6, 0).attr(column_param);
                raphael3.rect(240, 515, 50, 6, 0).attr(column_param);
                raphael3.rect(240, 535, 40, 6, 0).attr(column_param);
                raphael3.rect(240, 555, 30, 6, 0).attr(column_param);
                raphael3.rect(240, 575, 25, 6, 0).attr(column_param);
                raphael3.rect(240, 595, 20, 6, 0).attr(column_param);
                raphael3.rect(240, 615, 18, 6, 0).attr(column_param);
                raphael3.rect(240, 635, 16, 6, 0).attr(column_param);
                raphael3.rect(240, 655, 14, 6, 0).attr(column_param);
            });
            
            
            /*
             * 底部边框
             */
            
            Raphael(10, 1030, 1920, 40, function () {
                // 定义整体空间
                raphael_bottom = this;
                /*
                raphael_bottom.rect(0, 0, world_width, world_height, 0).attr({
                    stroke: "#888",
                    "stroke-width": 0.5,
                    "stroke-linejoin": "round",
                    fill:"11567D",
                    "fill-opacity": 0.3,
                    "stroke-opacity": 0.0
                });
                */
               

                   //fill: "#80f8eb",
                   //"fill-opacity": 0.8, 

               var bottom_border_param_1 = {
                   stroke: "#ffffff", 
                   "stroke-width": 0, 
                   "stroke-opacity":0,
                   fill: "#408988",
                   "fill-opacity": 0.9, 
               };
               var bottom_border_param_2 = {
                   stroke: "#11567D", 
                   "stroke-width": 0, 
                   "stroke-opacity":0,
                   fill: "#408988",
                   "fill-opacity": 0.4,
               };
               
               raphael_bottom.path("M60,15L70,15L70,20L170,20L170,15L180,15L180,20L180,25,L60,25z").attr(bottom_border_param_1);
               raphael_bottom.path("M180,20L300,20L300,25,L180,25z").attr(bottom_border_param_2);
               raphael_bottom.path("M300,15L310,15L310,20L410,20L410,15L420,15L420,20L420,25,L300,25z").attr(bottom_border_param_1);
               raphael_bottom.path("M420,20L540,20L540,25,L420,25z").attr(bottom_border_param_2);
               raphael_bottom.path("M540,15L550,15L550,20L650,20L650,15L660,15L660,20L660,25,L540,25z").attr(bottom_border_param_1);
               raphael_bottom.path("M660,20L780,20L780,25,L660,25z").attr(bottom_border_param_2);
               raphael_bottom.path("M780,15L790,15L790,20L890,20L890,15L900,15L900,20L900,25,L780,25z").attr(bottom_border_param_1);
               raphael_bottom.path("M900,20L1020,20L1020,25,L900,25z").attr(bottom_border_param_2);
               raphael_bottom.path("M1020,15L1030,15L1030,20,L1130,20L1130,15L1140,15L1140,20L1140,25,L1020,25z").attr(bottom_border_param_1);
               raphael_bottom.path("M1140,20L1260,20L1260,25,L1140,25z").attr(bottom_border_param_2);
               raphael_bottom.path("M1260,15L1270,15L1270,20L1370,20L1370,15L1380,15L1380,20L1380,25,L1260,25z").attr(bottom_border_param_1);
               raphael_bottom.path("M1380,20L1500,20L1500,25,L1380,25z").attr(bottom_border_param_2);
               raphael_bottom.path("M1500,15L1510,15L1510,20L1610,20L1610,15L1620,15L1620,20L1620,25,L1500,25z").attr(bottom_border_param_1);
               raphael_bottom.path("M1620,20L1740,20L1740,25,L1620,25z").attr(bottom_border_param_2);
               raphael_bottom.path("M1740,15L1750,15L1750,20L1850,20L1850,15L1860,15L1860,20L1860,25,L1740,25z").attr(bottom_border_param_1);
               
            });
            
            
            /*
             * 黑龙江地图 
             */
            Raphael("hlj_raphael", 1440, 960, function () {
                // 定义整体空间
                raphael_hlj = this;
                raphael_hlj.rect(0, 0, 1440, 960, 0).attr({
                    stroke: "#11567D",
                    "stroke-width": 10,
                    "stroke-linejoin": "round",
                    fill: "#80f8eb",
                    //fill:"11567D",
                    "fill-opacity": 0.0,
                    "stroke-opacity": 0
                });
                
                raphael_hlj.rect(0, 0, 1440, 10, 0).attr({
                    //fill:"#11567D",
                    //"fill-opacity": 1,
                    stroke: "#888",
                    "stroke-width": 0.5,
                    "stroke-linejoin": "round",
                    //fill: "#80f8eb",
                    fill:"0-#408988-#80f8eb",
                    "fill-opacity": 0.2,
                    "stroke-opacity": 0.0
                });
                
                raphael_hlj.rect(0, 950, 1440, 10, 0).attr({
                    //fill:"#11567D",
                    //"fill-opacity": 1,
                    stroke: "#888",
                    "stroke-width": 0.5,
                    "stroke-linejoin": "round",
                    //fill: "#80f8eb",
                    fill:"0-#408988-#80f8eb",
                    "fill-opacity": 0.2,
                    "stroke-opacity": 0.0
                });
                
                
                //============================= 地图 ===========================
                
                /*
                 * 绘制地图
                 */
                var hlj_map_path = {};
                
                for (var city in hlj_map.shapes) {
                    hlj_map_path[hlj_map.names[city]] = raphael_hlj.path(hlj_map.shapes[city]).attr({"stroke-linejoin": "round", stroke: "#80f8eb", fill: "#408988", "stroke-opacity": 1, "stroke-width": 1.0, "fill-opacity": 0.3}).data("name", hlj_map.names[city]);
                }
                
                hlj_map_path["haerbin"].attr({fill: "#ffaaaa", "fill-opacity": 0.6});
                hlj_map_path["yichun"].attr({fill: "#ffaaaa", "fill-opacity": 0.6});
                hlj_map_path["heihe"].attr({fill: "#ffaaaa", "fill-opacity": 0.6});
                // hlj_map_path["daxinganling"].animate({fill: "0-#ffffff-#ff0000-#ffffff", stroke: "#666","fill-opacity": 0.9}, 2000);
                // hlj_map_path["heihe"].animate({fill: "0-#ffffff-#f02f68-#ffffff", stroke: "#666","fill-opacity": 0.9}, 2000);
                // hlj_map_path["qiqihaer"].animate({fill: "0-#ffffff-#ffa8a8-#ffffff", stroke: "#666","fill-opacity": 0.9}, 2000);
                // hlj_map_path["daqing"].animate({fill: "0-#ffffff-#f05c5c-#ffffff", stroke: "#666","fill-opacity": 0.9}, 2000);
                // hlj_map_path["suihua"].animate({fill: "0-#ffffff-#ff4d4d-#ffffff", stroke: "#666","fill-opacity": 0.9}, 2000);
                // hlj_map_path["mudanjiang"].animate({fill: "0-#ffffff-#f02f2f-#ffffff", stroke: "#666","fill-opacity": 0.9}, 2000);
                // hlj_map_path["jixi"].animate({fill: "0-#ffffff-#c32f60-#ffffff", stroke: "#666","fill-opacity": 0.9}, 2000);
                // hlj_map_path["hegang"].animate({fill: "#f22222", stroke: "#666","fill-opacity": 0.9}, 2000);
                // hlj_map_path["shuangyashan"].animate({fill: "#f33333", stroke: "#666","fill-opacity": 0.9}, 2000);
                // hlj_map_path["haerbin"].animate({fill: "0-#ff0000-#0000ff", stroke: "#666","fill-opacity": 0.9}, 2000);
                // hlj_map_path["qitaihe"].animate({fill: "#f55555", stroke: "#666","fill-opacity": 0.9}, 2000);
                // hlj_map_path["yichun"].animate({fill: "#555555", stroke: "#666","fill-opacity": 0.9}, 2000);
                // hlj_map_path["jiamusi"].animate({fill: "#000fff", stroke: "#666","fill-opacity": 0.9}, 2000);
                
                
                
                /*
                 * 底格横线
                 */ 
                
                for (var h = 0,i = 0; h <= 960; h += 40, i++ ) {
                    if(i%3==0 && i!=0 && i!= 24){
                        raphael_hlj.path("M0," + h + "L1440," + h).attr({stroke: "#4B8F88", "stroke-width": 1, "stroke-dasharray":"", "stroke-opacity": 0.8});
                    }
                    else{
                        if(i!=0 && i!= 24){
                            raphael_hlj.path("M0," + h + "L1440," + h).attr({stroke: "#4B8F88", "stroke-width": 1, "stroke-dasharray":"- ", "stroke-opacity": 0.6});
                        }
                        
                    }
                }
                
                
                /*
                 * 底格纵线
                 */
                
                for (var w = 0,i = 0; w <= 1440; w += 40, i++ ) {
                    if(i%3==0 && i !=0 && i!= 36){
                        raphael_hlj.path("M" + w + ",0L" + w + ",960").attr({stroke: "#4B8F88", "stroke-width": 1, "stroke-dasharray":"", "stroke-opacity": 0.8});
                    }
                    else{
                        if(i != 0&& i != 36){
                            raphael_hlj.path("M" + w + ",0L" + w + ",960").attr({stroke: "#4B8F88", "stroke-width": 1, "stroke-dasharray":"- ", "stroke-opacity": 0.6});
                        }
                        
                    }
                }
                
                
                /*
                 * 底格十字光晕
                 */
                
                var d_x = 0,
                    d_y = 0;
                for (var w = 120; w < 1440; w += 120) {
                    for (var h = 0; h < 960; h += 120) {
                        if(h !=0 ){
                            raphael_hlj.path("M" + w + "," + (h-5) + "L" + w + "," + (h+5)).attr({stroke: "#80f8eb", "stroke-width": 1, "stroke-opacity": 0.5}).glow({color:"#80f8eb", width:8,opacity:0.25});
                            raphael_hlj.path("M" + (w-5) + "," + h + "L" + (w+5) + "," + h).attr({stroke: "#80f8eb", "stroke-width": 1, "stroke-opacity": 0.5}).glow({color:"#80f8eb", width:8,opacity:0.25});
                        }
                    }
                }
                
                
                /*
                 * 背景竖杠
                 */
                var flash_cx = 0,
                    flash_item_width = 20;
                
                for (var i = 0; i < 72; i++) {
                    raphael_hlj.rect(flash_cx, 0, flash_item_width, 960, 0).attr({ fill: "#80f8eb", "fill-opacity": 0});
                    flash_cx += flash_item_width;
                }
                //============================= 地图 ===========================
                
                /*
                 * 感染图例
                 */
                raphael_hlj.text(1210, 55, '感染图例').attr({fill: "#ffffff", "font-size":13, "font-weight": "bold", "text-anchor":"start"});
                
                raphael_hlj.rect(1200, 70, 220, 2, 0).attr({
                    "stroke-width": 0,
                    fill:"#ffffff",
                    "fill-opacity": 0.8
                });
                
                raphael_hlj.rect(1220, 90, 80, 30, 0).attr({
                    "stroke-width": 0,
                    fill:"#408988",
                    "fill-opacity": 0.5
                });
                raphael_hlj.text(1320, 100, '正常/少量感染').attr({fill: "#ffffff", "font-size":12, "font-weight": "bold", "text-anchor":"start"});
                raphael_hlj.text(1320, 115, '每日感染数量=<1K').attr({fill: "#D9B04C", "font-size":9, "font-weight": "bold", "text-anchor":"start"});
                
                
                raphael_hlj.rect(1220, 130, 80, 30, 0).attr({
                    "stroke-width": 0,
                    fill:"#ffaaaa",
                    "fill-opacity": 0.7
                });
                //raphael_hlj.text(1340, 145, '轻度感染').attr({fill: "#ffffff", "font-size":12, "font-weight": "bold", "text-anchor":"start"});
                raphael_hlj.text(1320, 140, '轻度感染').attr({fill: "#ffffff", "font-size":12, "font-weight": "bold", "text-anchor":"start"});
                raphael_hlj.text(1320, 155, '1K<每日感染数量=<10K').attr({fill: "#D9B04C", "font-size":9, "text-anchor":"start"});
                
                
                raphael_hlj.rect(1220, 170, 80, 30, 0).attr({
                    "stroke-width": 0,
                    fill:"#ff6666",
                    "fill-opacity": 0.7
                });
                //raphael_hlj.text(1340, 185, '中度感染').attr({fill: "#ffffff", "font-size":12, "font-weight": "bold", "text-anchor":"start"});
                raphael_hlj.text(1320, 180, '中度感染').attr({fill: "#ffffff", "font-size":12, "font-weight": "bold", "text-anchor":"start"});
                raphael_hlj.text(1320, 195, '10K<每日感染数量=<100K').attr({fill: "#D9B04C", "font-size":9, "text-anchor":"start"});
                
                raphael_hlj.rect(1220, 210, 80, 30, 0).attr({
                    "stroke-width": 0,
                    fill:"#ff3333",
                    "fill-opacity": 0.7
                });
                //raphael_hlj.text(1340, 225, '重度感染').attr({fill: "#ffffff", "font-size":12, "font-weight": "bold", "text-anchor":"start"});
                raphael_hlj.text(1320, 220, '重度感染').attr({fill: "#ffffff", "font-size":12, "font-weight": "bold", "text-anchor":"start"});
                raphael_hlj.text(1320, 235, '100K<每日感染数量').attr({fill: "#D9B04C", "font-size":9, "text-anchor":"start"});
                
                /*
                 * 告警图例
                 */
                raphael_hlj.text(1230, 335, '告警图例').attr({fill: "#ffffff", "font-size":13, "font-weight": "bold", "text-anchor":"start"});
                
                raphael_hlj.rect(1220, 350, 200, 2, 0).attr({
                    "stroke-width": 0,
                    fill:"#ffffff",
                    "fill-opacity": 0.8
                });
                
                raphael_hlj.circle(1260, 380, 16).attr({
                    "stroke-width": 0,
                    fill:"#AA393D",
                    "fill-opacity": 1
                });
                raphael_hlj.text(1290, 380, '放马源告警').attr({fill: "#ffffff", "font-size":12, "font-weight": "bold", "text-anchor":"start"});
                
                raphael_hlj.circle(1260, 420, 16).attr({
                    "stroke-width": 0,
                    fill:"#D9B04C",
                    "fill-opacity": 1
                });
                raphael_hlj.text(1290, 420, '被感染目标告警').attr({fill: "#ffffff", "font-size":12, "font-weight": "bold", "text-anchor":"start"});
                
                /*
                 * 左侧地图小模块
                 */
                /*
                var map_param = {
                    stroke: "#888",
                    "stroke-width": 0.5,
                    "stroke-linejoin": "round",
                    //fill: "#80f8eb",
                    fill:"#11567D",
                    "fill-opacity": 0.2,
                    "stroke-opacity": 0.0
                };
                raphael_hlj.rect(1320, 0, 120, 110, 0).attr(map_param);
                raphael_hlj.rect(1320, 120, 120, 110, 0).attr(map_param);
                raphael_hlj.rect(1320, 240, 120, 110, 0).attr(map_param);
                raphael_hlj.rect(1320, 360, 120, 110, 0).attr(map_param);
                raphael_hlj.rect(1320, 480, 120, 110, 0).attr(map_param);
                raphael_hlj.rect(1320, 600, 120, 110, 0).attr(map_param);
                
                loop_param = {stroke: "#fff", "stroke-width": 30};
                
                draw_loop(raphael_hlj, 1380, 60, 30, 42, "#ff0000", "#2FBFBF", 234);
                raphael_hlj.text(1380, 50, 'Trojan').attr({fill: "#ffffff", "font-size":11, "font-weight": "bold"});
                raphael_hlj.text(1380, 70, '65%').attr({fill: "#80f8eb", "font-size":10, "font-weight": "bold"});
                //raphael.circle(1380, 60, 48).attr({stroke: "#80f8eb", "stroke-width": 2, "stroke-opacity": 0.8});
                
                draw_loop(raphael_hlj, 1380, 180, 30, 42, "#ff0000", "#2FBFBF", 61);
                raphael_hlj.text(1380, 170, 'Virus').attr({fill: "#ffffff", "font-size":11, "font-weight": "bold"});
                raphael_hlj.text(1380, 190, '17%').attr({fill: "#80f8eb", "font-size":10, "font-weight": "bold"});
                //raphael.circle(1380, 180, 48).attr({stroke: "#80f8eb", "stroke-width": 2, "stroke-opacity": 0.8});
                
                draw_loop(raphael_hlj, 1380, 300, 30, 42, "#ff0000", "#2FBFBF", 32);
                raphael_hlj.text(1380, 290, 'Worm').attr({fill: "#ffffff", "font-size":11, "font-weight": "bold"});
                raphael_hlj.text(1380, 310, '9%').attr({fill: "#80f8eb", "font-size":10, "font-weight": "bold"});
                //raphael.circle(1380, 300, 48).attr({stroke: "#ffffff", "stroke-width": 2, "stroke-opacity": 0.8});
                
                draw_loop(raphael_hlj, 1380, 420, 30, 42, "#ff0000", "#2FBFBF", 14);
                raphael_hlj.text(1380, 410, 'Spyware').attr({fill: "#ffffff", "font-size":11, "font-weight": "bold"});
                raphael_hlj.text(1380, 430, '4%').attr({fill: "#80f8eb", "font-size":10, "font-weight": "bold"});
                
                draw_loop(raphael_hlj, 1380, 540, 30, 42, "#ff0000", "#2FBFBF", 4);
                raphael_hlj.text(1380, 530, 'Hacktool').attr({fill: "#ffffff", "font-size":11, "font-weight": "bold"});
                raphael_hlj.text(1380, 550, '1%').attr({fill: "#80f8eb", "font-size":10, "font-weight": "bold"});
                
                draw_loop(raphael_hlj, 1380, 660, 30, 42, "#ff0000", "#2FBFBF", 4);
                raphael_hlj.text(1380, 650, 'X-Files').attr({fill: "#ffffff", "font-size":11, "font-weight": "bold"});
                raphael_hlj.text(1380, 670, '1%').attr({fill: "#80f8eb", "font-size":10, "font-weight": "bold"});
                */
                
                
                
                //  ============================= 地图雷达刷新告警 ===========================  >>
                
                /*
                 * 地图雷达
                 */
                //spinner( raphael_hlj );
                
                
                /*
                 * 图标告警
                 */
                var now_flash_num = 0;
                setInterval(start_alarm_hlj, 1000);
                
                function start_alarm_hlj(){
                    for(var w = 0; w < Math.floor(Math.random()*10); w += 1){
                        /*
                        if( Math.floor(Math.random()*10) < 5){
                            //hlj_map_path["daxinganling"].animate({fill: "#ff0000", "fill-opacity": 0.9}, 100);
                            //hlj_map_path["heihe"].animate({fill: "#408988", "fill-opacity": 0.3}, 100);
                            hlj_map_path["daxinganling"].animate({fill: "rgb(" +  now_flash_num + ", 24, 24)", "fill-opacity": 0.9}, 100);
                            //hlj_map_path["heihe"].animate({fill: "#408988"}, 100);
                        }
                        
                        else{
                            //hlj_map_path["heihe"].animate({fill: "#ff0000", "fill-opacity": 0.9}, 100);
                            //hlj_map_path["daxinganling"].animate({fill: "#408988", "fill-opacity": 0.3}, 100);
                            hlj_map_path["heihe"].animate({fill: "rgb(" +  now_flash_num + ", 24, 24)", "fill-opacity": 0.9}, 100);
                            //hlj_map_path["daxinganling"].animate({fill: "#408988"}, 100);
                        }
                        if(now_flash_num > 240){
                            now_flash_num = 100;
                        }
                        else{
                            now_flash_num += 15;
                        }
                        */
                        //console.info(hlj_alarm_data[now_flash_num][15]);
                        //console.info(hlj_alarm_data[now_flash_num][16]);
                        
                        // 坐标加了点随机数，不然都集中在几个点上。因黑河坐标较特殊，容易标到国外。所以是横减竖加
                        if(hlj_alarm_data[now_flash_num][0] == "0"){
                            alarm_dst_symbol_hlj(raphael_hlj, hlj_alarm_data[now_flash_num][15] - Math.floor(Math.random()*10), hlj_alarm_data[now_flash_num][16] + Math.floor(Math.random()*10));
                            //alarm_flash_hlj(hlj_alarm_data[now_flash_num][14],"#D9B04C");
                            if(hlj_alarm_data[now_flash_num][14] == 'haerbin' || hlj_alarm_data[now_flash_num][14] == 'yichun' || hlj_alarm_data[now_flash_num][14] == 'heihe'){
                                alarm_flash_hlj(hlj_alarm_data[now_flash_num][14],"#ffaaaa");
                            }
                            else{
                                alarm_flash_hlj(hlj_alarm_data[now_flash_num][14],"#408988");
                            }
                        }
                        else{
                            //alarm_flash_hlj(hlj_alarm_data[now_flash_num][13],"#AA393D");
                            alarm_src_symbol_hlj(raphael_hlj, hlj_alarm_data[now_flash_num][15] - Math.floor(Math.random()*10), hlj_alarm_data[now_flash_num][16] + Math.floor(Math.random()*10));
                            if(hlj_alarm_data[now_flash_num][13] == 'haerbin' || hlj_alarm_data[now_flash_num][13] == 'yichun' || hlj_alarm_data[now_flash_num][13] == 'heihe'){
                                alarm_flash_hlj(hlj_alarm_data[now_flash_num][13],"#ffaaaa");
                            }
                            else{
                                alarm_flash_hlj(hlj_alarm_data[now_flash_num][13],"#408988");
                            }
                        }
                        
                        
                        
                        scroll_table(hlj_alarm_data[now_flash_num]);
                        now_flash_num += 1;
                        if(now_flash_num == hlj_alarm_data.length){
                           now_flash_num = 0
                        }
                    }
                }
                
                function alarm_flash_hlj(area, color){
                    hlj_map_path[area].animate({fill: color, "fill-opacity": 0.9}, 1000, "easeInOut", function(){flash_hlj_back(area)});
                }
                function flash_hlj_back(area){
                    if(area == 'haerbin' || area == 'yichun' || area == 'heihe'){
                        hlj_map_path[area].animate({fill: "#ffaaaa", "fill-opacity": 0.6}, 100, "easeInOut");
                    }
                    else{
                        hlj_map_path[area].animate({fill: "#408988", "fill-opacity": 0.3}, 100, "easeInOut");
                    }
                    
                }
                
                
                //为表格添加事件
                function scroll_table(hlj_alarm_data){
                    time = (new Date()).toLocaleTimeString();
                    
                    var virus_name = hlj_alarm_data['8'];
                    if(virus_name.length > 38){
                        virus_name = virus_name.substr(0, 35) + '...';
                    }
                    
                    var yuan_name = hlj_alarm_data['9'];
                    if(yuan_name.length > 6){
                        yuan_name = yuan_name.substr(0, 5) + '...';
                    }
                    
                    _tbodydom_hlj = $('#scrolltalbe_hlj tbody');
                    _trdom_hlj = $('#scrolltalbe_hlj tbody tr');
                    
                    _trdom_hlj.eq(0).remove();
                    
                    _old = _tbodydom_hlj.html();
                    
                    _new = 
                        '<tr><td style="width: 45px"><div style="width: 5px">&nbsp;</div></td>'+
                            '<td style="width: 230px"><div style="width: 230px">' + virus_name + '</div></td>'+
                            '<td style="width: 80px"><div style="width: 80px">' + yuan_name + '</div></td><td style="width: 80px"><div style="width: 80px">' + hlj_alarm_data['10'] + '</div></td></tr>';
                    _tbodydom_hlj.html(_old + _new);
                    
                };
                // <<  ============================= 地图雷达刷新告警 ===========================
                
            });
            
            
            Raphael("hlj_raphael_radar", 1440, 960, function () {
                // 定义整体空间
                raphael_radar = this;
                var map_param = {
                    stroke: "#888",
                    "stroke-width": 0.5,
                    "stroke-linejoin": "round",
                    //fill: "#80f8eb",
                    fill:"#11567D",
                    "fill-opacity": 0.2,
                    "stroke-opacity": 0.0
                };
                raphael_radar.rect(0, 840, 280, 80, 0).attr(map_param);
                
                raphael_radar.text(115, 890, '秒后刷新为').attr({fill: "#80f8eb", "font-size":12, "font-weight": "bold"});
                
                raphael_radar.text(235, 890, '地图').attr({fill: "#80f8eb", "font-size":12, "font-weight": "bold"});
                
                spinner( raphael_radar );
            })
            
            
            /*
             * 绘制花瓣图
             */
            function wind_rose(holderid, x, y, r1, r2, count, stroke_width, colour, data) {
                var sectorsCount = count || 12,
                    color = colour || "#fff",
                    width = stroke_width || 15,
                    cx = r2 + width + 20,//中心点横坐标
                    cy = r2 + width + 20,//中心点纵坐标
                    beta = 2 * Math.PI / sectorsCount;
                    
                
                // 兼容两种定位方法
                if(holderid != ""){
                    r = Raphael(holderid, r2 * 2 + width * 2 + 35, r2 * 2 + width * 2 + 35);//周围有数字，所以加上30的偏移量
                }
                else{
                    r = Raphael(x, y, r2 * 2 + width * 2 + 35, r2 * 2 + width * 2 + 35);//周围有数字，所以加上30的偏移量
                }                    
                    
                var paths = r.set();
                    
                // 绘制每个wind_rose花瓣的函数
                r.customAttributes.draw_wind_rose = function (cx, cy, r, R, d1, d2, the_color) {
                    /* 
                     * cx, cy为中心点坐标
                     * r为内圆半径。R为wind_rose花瓣的半径，注意，不是圆的半径
                     * d1起点角度
                     * d2终点角度
                     * the_color为wind_rose的颜色。默认为统一的 */
                    d1 = d1 + 270;
                    d2 = d2 + 270;
                    a1 = (d1 % 360) * Math.PI / 180;
                    a2 = (d2 % 360) * Math.PI / 180;
                    
                    /*
                     * 计算四个点的坐标
                     * */
                    var tx1 = cx + r * Math.cos(a1);
                    var ty1 = cy + r * Math.sin(a1);
                    var tx2 = cx + R * Math.cos(a1);
                    var ty2 = cy + R * Math.sin(a1);
                    var tx3 = cx + R * Math.cos(a2);
                    var ty3 = cy + R * Math.sin(a2);
                    var tx4 = cx + r * Math.cos(a2);
                    var ty4 = cy + r * Math.sin(a2);
                    
                    return {
                        path: [["M", tx1, ty1], ["L", tx2, ty2], ["A", R, R, 0, 0, 1, tx3, ty3], ["L", tx4, ty4], ["z"]],
                        fill: the_color
                    };
                }
                
                /*
                 * 绘制底色圆
                 * */
                var temp_r = (r2 - r1)/100;
                r.circle(cx, cy, r1).attr({stroke: "#507973", "stroke-width": 1});
                r.circle(cx, cy, r2 - 65*temp_r).attr({stroke: "#80f8eb", "stroke-width": 1});
                r.circle(cx, cy, r2 - 50*temp_r).attr({stroke: "#507973", "stroke-width": 1});
                r.circle(cx, cy, r2 - 35*temp_r).attr({stroke: "#80f8eb", "stroke-width": 1});
                r.circle(cx, cy, r2 - 20*temp_r).attr({stroke: "#507973", "stroke-width": 1});
                r.circle(cx, cy, r2).attr({stroke: "#80f8eb", "stroke-width": 1});
                
                /*
                 * 绘制外圆外的刻度和底线，可以和下面的合在一起。
                 * */
                for (var i = 0; i < sectorsCount; i++) {
                    var alpha = beta * i - Math.PI / 2,
                        cos = Math.cos(alpha),
                        sin = Math.sin(alpha);
                    // 绘线
                    //r.path([["M", cx + r1 * cos, cy + r1 * sin], ["L", cx + r2 * cos, cy + r2 * sin]]).attr({stroke: "#3c0", "stroke-width": 1, "stroke-linecap": "round"});
                    
                    r3 = r2 + 8;
                    if(i%2 == 0){
                        if(i == 0){
                            r.text(cx + r3 * cos, cy + r3 * sin, 24).attr({fill: "#80f8eb", "font-size":12, "font-weight": "bold"});
                        }
                        else{
                            r.text(cx + r3 * cos, cy + r3 * sin, i).attr({fill: "#80f8eb", "font-size":12, "font-weight": "bold"});
                        }
                    }
                }
                
                
                var max_data,//最大的数据。计算比例用
                    start_angle = 0,//起始角度
                    r_data,//花瓣的半径
                    //每个花瓣的角度
                    val = 360/sectorsCount;
                    // 不同数据不同颜色。
                    the_colors = ["rgb(132, 166, 233)", "rgb(117, 155, 231)", "rgb(116, 155, 231)", "rgb(112, 151, 230)", "rgb(128, 163, 233)","rgb(120, 157, 231)", 
                        "rgb(188, 206, 243)", "rgb(192, 209, 244)", "rgb(188, 207, 243)", "rgb(185, 204, 243)", "rgb(187, 206, 243)", "rgb(185, 204, 243)", 
                        "rgb(178, 199, 241)", "rgb(177, 199, 241)", "rgb(171, 194, 240)", "rgb(164, 189, 239)", "rgb(139, 171, 235)", "rgb(95, 139, 227)", 
                        "rgb(113, 152, 230)", "rgb(136, 169, 234)", "rgb(138, 170, 234)", "rgb(148, 177, 236)", "rgb(151, 179, 237)", "rgb(143, 174, 235)"];
                
                //data = data.sort(function (a, b) { return b - a;});
                
                /*
                 * 循环一下最大值。
                 * */
                max_data = 0;
                for (var i = 0, ii = data.length; i < ii; i++) {
                    if (data[i] > max_data){
                        max_data = data[i];
                    }
                }
                
                /*
                 * 绘制花瓣。
                 * */
                for (i = 0; i < sectorsCount; i++) {
                    (function (i, val) {
                        if(data[i] != 0 || data[i] != undefined){
                            r_data = data[i]/max_data*(r2 - r1) + r1;
                        }
                        else{
                            r_data = r1;
                        }
                        var ttt = r.path().attr({draw_wind_rose: [cx, cy, r1, r_data, start_angle, start_angle + val, colour], stroke: colour, "stroke-width": 1.5, "stroke-opacity": 0.9,"opacity":0.5});
                         paths.push(ttt);
                    })(i, val);
                    start_angle += val;
                }
                
                var temp_int = 0;
                
                var show_tick;
                function show_ticker() {
                    if(temp_int < sectorsCount){
                        paths[temp_int].attr("opacity", 0.5);
                        temp_int += 1;
                        r.safari();
                        show_tick = setTimeout(show_ticker, 800 / sectorsCount);
                    }
                };
                
                var tick;
                (function ticker() {
                    paths.attr("opacity", 0);
                    temp_int = 0;
                    show_ticker();
                    //tick = setTimeout(ticker, 4000 );
                })();
            }
            
            
            //============================= 地图切换 ===========================
            setTimeout(start_cutover, 5000 )
            
            var timer_second = 30;
            var cutover_second = timer_second;
            function start_cutover() {
                $("#timer_div").text(cutover_second);
                $("#map_name_div").text("全国");
                
                $("#china_raphael").hide();
                $("#table_div_china").hide();
                $("#nanhai").hide();
                
                //$("#hlj_raphael").hide();
                //$("#table_div_hlj").hide();
                
                setInterval(function(){
                        cutover_map_timer();
                    }, 
                    1000
                );
            };
            
            function cutover_map_timer(){
                if(cutover_second > 0){
                    cutover_second = cutover_second - 1;
                    
                }
                else{
                    cutover_second = timer_second;
                    cutover_map();
                }
                $("#timer_div").text(cutover_second);
            }
            
            var cutover_flag = false;
            function cutover_map(){
                if(cutover_flag){
                    $("#china_raphael").hide();
                    $("#table_div_china").hide();
                    $("#nanhai").hide();
                    
                    $("#hlj_raphael").show();
                    $("#table_div_hlj").show();
                    $("#map_name_div").text("全国");
                    
                    cutover_flag = false;
                }
                else{
                    $("#china_raphael").show();
                    $("#table_div_china").show();
                    $("#nanhai").show();
                    $("#hlj_raphael").hide();
                    $("#table_div_hlj").hide();
                    $("#map_name_div").text("黑龙江省");
                    
                    cutover_flag = true;
                }
            }
            
            
        </script>
        
    </head>
    
    <body>
        <div id="container"></div>
        <script type="text/javascript">
            if(!Detector.webgl) {
                Detector.addGetWebGLMessage();
            } else {
                var years = ['1990', '1995', '2000'];
                var container = document.getElementById('container');
                var globe = new DAT.Globe(container);
                var i, tweens = [];

                var settime = function(globe, t) {
                    return function() {
                        new TWEEN.Tween(globe).to({
                            time : t / years.length
                        }, 500).easing(TWEEN.Easing.Cubic.EaseOut).start();
                    }
                };

                var xhr;
                TWEEN.start();
                xhr = new XMLHttpRequest();
                xhr.open('GET', 't.json', true);
                xhr.onreadystatechange = function(e) {
                    if(xhr.readyState === 4) {
                        if(xhr.status === 200) {
                            var data = JSON.parse(xhr.responseText);
                            window.data = data;
                            globe.addData(data, {
                                format : 'magnitude',
                                name : '1990',
                                animated : true
                            });
                            
                            globe.createPoints();
                            settime(globe,0)();
                            globe.animate();
                        }
                    }
                };
                xhr.send(null);
            }
        </script>
        
        <div id="china_raphael">
        </div>
        
        <div id="nanhai">
            <img id="nanhai_img" src="image/nanhai.png">
        </div>
        
        <div id="hlj_raphael">
        </div>
        
        <div id="hlj_raphael_radar">
        </div>
        
        <div id="timer_div">
            
        </div>
        
        <div id="map_name_div">
           
        </div>
        
        <div id="table_div_china" class="table_div_china">
            <table id='scrolltalbe_china' class="table table-striped">
                <thead>
                    <tr>
                        <th style="width: 5px"></th>
                        <th style="width: 240px">恶意代码名称</th>
                        <th style="width: 110px">放马源地址</th>
                    </tr>
                </thead>
                <tbody>
                    <tr><td>&nbsp;</td><td></td><td></td></tr>
                    <tr><td>&nbsp;</td><td></td><td></td></tr>
                    <tr><td>&nbsp;</td><td></td><td></td></tr>
                    <tr><td>&nbsp;</td><td></td><td></td></tr>
                    <tr><td>&nbsp;</td><td></td><td></td></tr>
                    <tr><td>&nbsp;</td><td></td><td></td></tr>
                </tbody>
            </table>
        </div>
        
        <div id="table_div_hlj" class="table_div_hlj">
            <table id='scrolltalbe_hlj' class="table table-striped">
                <thead>
                    <tr>
                        <th style="width: 5px"></th>
                        <th style="width: 240px">恶意代码名称</th>
                        <th style="width: 100px">放马源</th>
                        <th style="width: 100px">被感染目标</th>
                    </tr>
                </thead>
                <tbody>
                    <tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
                    <tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
                    <tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
                    <tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
                    <tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
                    <tr><td>&nbsp;</td><td></td><td></td><td></td></tr>
                </tbody>
            </table>
        </div>
    </body>
</html>